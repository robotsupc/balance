#include <Arduino.h>
#include <Wire.h>

#define MLA D6 // Left Motor direction (A)
#define MLB D7 // Left Motor speed (B)
#define MRA D2 // Right Motor direction (A)
#define MRB D3 // Right Motor speed (B)
#define MPU_SDA D4 // Data line for I2C
#define MPU_SCL D5 // Clock line for I2C

#define LEFT 0
#define RIGHT 1
#define FORWARD 0
#define BACKWARD 1

#define MIN_SPEED 0.8
#define DIR_CHANGE_TIMEOUT 500

#define FAST PWMRANGE


const int MPU=0x68;  // I2C address of the MPU-6050
int16_t AcX,AcY,AcZ,Tmp,GyX,GyY,GyZ;
void setup2(){
  delay(3000);
  Serial.println("Start");
  Wire.begin(MPU_SDA, MPU_SCL); // sda, scl
  Wire.beginTransmission(MPU);
  Wire.write(0x6B);  // PWR_MGMT_1 register
  Wire.write(0);     // set to zero (wakes up the MPU-6050)
  Wire.endTransmission(true);
  Serial.begin(115200);
  Serial.println("Setup completato...");
}

void loop2(){
  Wire.beginTransmission(MPU);
  Wire.write(0x3B);  // starting with register 0x3B (ACCEL_XOUT_H)
  Wire.endTransmission(false);
  Wire.requestFrom(MPU,14,true);  // request a total of 14 registers
  AcX=Wire.read()<<8|Wire.read();  // 0x3B (ACCEL_XOUT_H) & 0x3C (ACCEL_XOUT_L)
  AcY=Wire.read()<<8|Wire.read();  // 0x3D (ACCEL_YOUT_H) & 0x3E (ACCEL_YOUT_L)
  AcZ=Wire.read()<<8|Wire.read();  // 0x3F (ACCEL_ZOUT_H) & 0x40 (ACCEL_ZOUT_L)
  Tmp=Wire.read()<<8|Wire.read();  // 0x41 (TEMP_OUT_H) & 0x42 (TEMP_OUT_L)
  Serial.print("AcX = "); Serial.print(AcX);
  Serial.print(" | AcY = "); Serial.print(AcY);
  Serial.print(" | AcZ = "); Serial.print(AcZ);
  Serial.print(" | Tmp = "); Serial.println(Tmp/340.00+36.53);  //equation for temperature in degrees C from datasheet

  delay(333);
}



void setup() {
  Serial.begin(115200);
  pinMode(MLA, OUTPUT);
  pinMode(MLB, OUTPUT);
  pinMode(MRA, OUTPUT);
  pinMode(MRB, OUTPUT);

}

void writeMotor(int motor, int direction, float speed) {
  int low = MLA;
  int pwm = MLB;
  if (motor == RIGHT) {
    low = MRA;
    pwm = MRB;
  }
  if (direction == BACKWARD) {
    int tmp = low;
    low = pwm;
    pwm = tmp;
  }

  digitalWrite(low, LOW);
  /*int min = PWMRANGE * MIN_SPEED;
  int range = (PWMRANGE-min)*speed;
  analogWrite(pwm, (int)(min+range));*/
  analogWrite(pwm, (int)(speed));
}

void writeMotors(int direction, float speed) {
  writeMotor(LEFT, direction, speed);
  writeMotor(RIGHT, direction, speed);
}
void loop() {
  Serial.println("Hi");
  int t = 2000;
  int u = DIR_CHANGE_TIMEOUT;


  writeMotors(FORWARD, FAST); delay(t);
  writeMotors(FORWARD, 0); delay(u);
  writeMotors(BACKWARD, FAST); delay(t);
  writeMotors(BACKWARD, 0); delay(u);
  loop2();
}
